coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
write.csv(coches_df,"Coches.csv", row.names = TRUE, fileEncoding = "utf-8")
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
write.csv(coches_df,"Coches.csv", row.names = TRUE, fileEncoding = "utf-8")
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv",encoding="utf-8")
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df,"Coches.csv", row.names = TRUE, file=con)
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file(encoding="UTF-8")
write.csv(coches_df,"Coches.csv", row.names = TRUE, file=con)
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df, row.names = TRUE, file=con)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv",encoding="utf-8")
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df, row.names = TRUE, file=con)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv",fileEncoding = "UTF-8")
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df, row.names = TRUE, file=con)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv",encoding = "UTF-8")
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df, row.names = TRUE, file=con)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv")
head(coches_df)
View(coches_df)
ggplot(coches_df, aes(x = puertas_data, y = precio_data)) +
geom_point() + geom_smooth() +
facet_grid(~combustible)
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
# crear dataframe de vectores
coches_df <- data.frame(precio_data,
kms_data,
ano_data,
die_data,gas_data,cc_data,puertas_data)
#combinamos las variables de diesel y gasolina en una misma columna
coches_df$combustible<-NA
coches_df$combustible[which(!is.na(coches_df$gas_data))]<-as.character(coches_df$gas_data[which(!is.na(coches_df$gas_data))])
coches_df$combustible[which(!is.na(coches_df$die_data))]<-as.character(coches_df$die_data[which(!is.na(coches_df$die_data))])
#eliminamos las columnas de diesel y gasolina
coches_df <- subset(coches_df, select =
c(precio_data,kms_data,ano_data,cc_data,puertas_data,combustible))
View(coches_df)
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
View(coches_df)
# crear dataframe de vectores
coches_df <- data.frame(precio_data,
kms_data,
ano_data,
die_data,gas_data,cc_data,puertas_data)
#combinamos las variables de diesel y gasolina en una misma columna
coches_df$combustible<-NA
coches_df$combustible[which(!is.na(coches_df$gas_data))]<-as.character(coches_df$gas_data[which(!is.na(coches_df$gas_data))])
coches_df$combustible[which(!is.na(coches_df$die_data))]<-as.character(coches_df$die_data[which(!is.na(coches_df$die_data))])
#eliminamos las columnas de diesel y gasolina
coches_df <- subset(coches_df, select =
c(precio_data,kms_data,ano_data,cc_data,puertas_data,combustible))
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
# crear dataframe de vectores
coches_df <- data.frame(precio_data,
kms_data,
ano_data,
die_data,gas_data,cc_data,puertas_data)
#combinamos las variables de diesel y gasolina en una misma columna
coches_df$combustible<-NA
coches_df$combustible[which(!is.na(coches_df$gas_data))]<-as.character(coches_df$gas_data[which(!is.na(coches_df$gas_data))])
coches_df$combustible[which(!is.na(coches_df$die_data))]<-as.character(coches_df$die_data[which(!is.na(coches_df$die_data))])
#eliminamos las columnas de diesel y gasolina
coches_df <- subset(coches_df, select =
c(precio_data,kms_data,ano_data,cc_data,puertas_data,combustible))
View(coches_df)
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
# crear dataframe de vectores
coches_df <- data.frame(precio_data,
kms_data,
ano_data,
die_data,gas_data,cc_data,puertas_data)
#combinamos las variables de diesel y gasolina en una misma columna
coches_df$combustible<-NA
coches_df$combustible[which(!is.na(coches_df$gas_data))]<-as.character(coches_df$gas_data[which(!is.na(coches_df$gas_data))])
coches_df$combustible[which(!is.na(coches_df$die_data))]<-as.character(coches_df$die_data[which(!is.na(coches_df$die_data))])
#eliminamos las columnas de diesel y gasolina
coches_df <- subset(coches_df, select =
c(precio_data,kms_data,ano_data,cc_data,puertas_data,combustible))
View(coches_df)
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df, row.names = TRUE, file=con)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv")
head(coches_df)
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
na.omit(coches_df)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df, row.names = TRUE, file=con)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv")
head(coches_df)
View(coches_df)
knitr::opts_chunk$set(echo = TRUE)
options(encoding = 'UTF-8')
#Loading the rvest package
library('rvest')
library( tables ) # Presentación de tablas
library("ggplot2")
library(readr)
library(expss)
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
# crear dataframe de vectores
coches_df <- data.frame(precio_data,
kms_data,
ano_data,
die_data,gas_data,cc_data,puertas_data)
#combinamos las variables de diesel y gasolina en una misma columna
coches_df$combustible<-NA
coches_df$combustible[which(!is.na(coches_df$gas_data))]<-as.character(coches_df$gas_data[which(!is.na(coches_df$gas_data))])
coches_df$combustible[which(!is.na(coches_df$die_data))]<-as.character(coches_df$die_data[which(!is.na(coches_df$die_data))])
#eliminamos las columnas de diesel y gasolina
coches_df <- subset(coches_df, select =
c(precio_data,kms_data,ano_data,cc_data,puertas_data,combustible))
View(coches_df)
knitr::opts_chunk$set(echo = TRUE)
options(encoding = 'UTF-8')
#Loading the rvest package
library('rvest')
library( tables ) # Presentación de tablas
library("ggplot2")
library(readr)
library(expss)
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
# crear dataframe de vectores
coches_df <- data.frame(precio_data,
kms_data,
ano_data,
die_data,gas_data,cc_data,puertas_data)
#combinamos las variables de diesel y gasolina en una misma columna
coches_df$combustible<-NA
coches_df$combustible[which(!is.na(coches_df$gas_data))]<-as.character(coches_df$gas_data[which(!is.na(coches_df$gas_data))])
coches_df$combustible[which(!is.na(coches_df$die_data))]<-as.character(coches_df$die_data[which(!is.na(coches_df$die_data))])
#eliminamos las columnas de diesel y gasolina
coches_df <- subset(coches_df, select =
c(precio_data,kms_data,ano_data,cc_data,puertas_data,combustible))
coches_df<-na.omit(coches_df)
View(coches_df)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv")
head(coches_df)
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df, row.names = TRUE, file=con)
View(coches_df)
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
# crear dataframe de vectores
coches_df <- data.frame(precio_data,
kms_data,
ano_data,
die_data,gas_data,cc_data,puertas_data)
#combinamos las variables de diesel y gasolina en una misma columna
coches_df$combustible<-NA
coches_df$combustible[which(!is.na(coches_df$gas_data))]<-as.character(coches_df$gas_data[which(!is.na(coches_df$gas_data))])
coches_df$combustible[which(!is.na(coches_df$die_data))]<-as.character(coches_df$die_data[which(!is.na(coches_df$die_data))])
#eliminamos las columnas de diesel y gasolina
coches_df <- subset(coches_df, select =
c(precio_data,kms_data,ano_data,cc_data,puertas_data,combustible))
coches_df<-na.omit(coches_df)
View(coches_df)
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df, row.names = TRUE, file=con)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv")
head(coches_df)
View(coches_df)
View(coches_df)
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
# crear dataframe de vectores
coches_df <- data.frame(precio_data,
kms_data,
ano_data,
die_data,gas_data,cc_data,puertas_data)
#combinamos las variables de diesel y gasolina en una misma columna
coches_df$combustible<-NA
coches_df$combustible[which(!is.na(coches_df$gas_data))]<-as.character(coches_df$gas_data[which(!is.na(coches_df$gas_data))])
coches_df$combustible[which(!is.na(coches_df$die_data))]<-as.character(coches_df$die_data[which(!is.na(coches_df$die_data))])
#eliminamos las columnas de diesel y gasolina
coches_df <- subset(coches_df, select =
c(precio_data,kms_data,ano_data,cc_data,puertas_data,combustible))
coches_df<-na.omit(coches_df)
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df, row.names = TRUE, file=con,row.names=FALSE)
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df,  file=con,row.names=FALSE)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv")
head(coches_df)
View(coches_df)
View(coches_df)
#Specifying the url for desired website to be scraped
url <- 'https://www.milanuncios.com/coches-de-segunda-mano/'
#Reading the HTML code from the website
webpage <- read_html(url)
#find the listing nodes and id of each node
listings<-html_nodes(webpage, "div.aditem-detail")
#search each listing node for the child ticket and limit view criteria
precio_data<-sapply(listings, function(x) {html_node(x, ".aditem-price") %>% html_text()} )
kms_data<-sapply(listings, function(x) {html_node(x, ".kms.tag-mobile") %>% html_text()} )
ano_data<-sapply(listings, function(x) {html_node(x, ".ano.tag-mobile") %>% html_text()} )
die_data<-sapply(listings, function(x) {html_node(x, ".die.tag-mobile") %>% html_text()} )
gas_data<-sapply(listings, function(x) {html_node(x, ".gas.tag-mobile") %>% html_text()} )
cc_data<-sapply(listings, function(x) {html_node(x, ".cc.tag-mobile") %>% html_text()} )
puertas_data<-sapply(listings, function(x) {html_node(x, ".ejes.tag-mobile") %>% html_text()} )
# crear dataframe de vectores
coches_df <- data.frame(precio_data,
kms_data,
ano_data,
die_data,gas_data,cc_data,puertas_data)
#combinamos las variables de diesel y gasolina en una misma columna
coches_df$combustible<-NA
coches_df$combustible[which(!is.na(coches_df$gas_data))]<-as.character(coches_df$gas_data[which(!is.na(coches_df$gas_data))])
coches_df$combustible[which(!is.na(coches_df$die_data))]<-as.character(coches_df$die_data[which(!is.na(coches_df$die_data))])
#eliminamos las columnas de diesel y gasolina
coches_df <- subset(coches_df, select =
c(precio_data,kms_data,ano_data,cc_data,puertas_data,combustible))
coches_df<-na.omit(coches_df)
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df,  file=con,row.names=FALSE)
coches_df <- read_csv("C:/Users/50051120/Desktop/Clases R/PracticaCamilla/Coches.csv")
head(coches_df)
ggplot(data = coches_df, mapping = aes(x = as.numeric(kms_data), y = as.numeric(precio_data), colour = ano_data)) +
geom_point()
ggplot(coches_df, aes(ano_data)) + geom_bar(fill='darkblue',color="darkred")
ggplot(coches_df, aes(x = puertas_data, y = precio_data)) +
geom_point() + geom_smooth() +
facet_grid(~combustible)
#https://ggplot2.tidyverse.org/reference/ggtheme.html
p1 <- ggplot(coches_df) +
geom_point(aes(x = as.numeric(cc_data), y = as.numeric(precio_data), colour = combustible)) +
labs(title = "Precio VS Caballos",
subtitle = "Datos de coches",
caption = "Datos de Milanuncios",
tag = "Figure 1",
x = "Caballos",
y = "Precio",
colour = "Combustible")
p1 + theme_dark()
#https://cran.r-project.org/web/packages/expss/vignettes/tables-with-labels.html
Salaries = apply_labels(coches_df,
precio_data = "Precio",
combustible = "Combustible",
ano_data = "Anio",
kms_data = "Kilometros",
puertas_data = "Puertas",
cc_data = "Caballos"
)
cro(coches_df$precio_data, coches_df$puertas_data)
cro_cpct(coches_df$ano_data, list(total(), coches_df$combustible, coches_df$puertas_data))
View(coches_df)
install.packages("rvest")
install.packages("rvest")
install.packages("tables")
knitr::opts_chunk$set(echo = TRUE)
options(encoding = 'UTF-8')
install.packages("rvest")
install.packages("tables")
install.packages("ggplot2")
install.packages("readr")
install.packages("expss")
install.packages("rvest")
install.packages("tables")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("readr")
install.packages("expss")
knitr::opts_chunk$set(echo = TRUE)
options(encoding = 'UTF-8')
coches_df$ano_data <- gsub("año ", "", coches_df$ano_data)
coches_df$kms_data<- gsub(" kms", "", coches_df$kms_data)
coches_df$cc_data<- gsub(" cv", "", coches_df$cc_data)
coches_df$puertas_data<- gsub(" puertas", "", coches_df$puertas_data)
coches_df$precio_data<- gsub("€", "", coches_df$precio_data)
con<-file('Coches.csv',encoding="UTF-8")
write.csv(coches_df,  file=con,row.names=FALSE)
coches_df <- read_csv("Coches.csv")
knitr::opts_chunk$set(echo = TRUE)
options(encoding = 'UTF-8')
install.packages("rvest",repos="https://cran.rstudio.com/bin/windows/Rtools/")
install.packages("tables", repos="https://cran.rstudio.com/bin/windows/contrib/3.6/tables_0.8.8.zip")
install.packages("ggplot2", repos="https://cran.rstudio.com/bin/windows/contrib/3.6/ggplot2_3.2.1.zip")
install.packages("readr", repos="https://cran.rstudio.com/bin/windows/contrib/3.6/readr_1.3.1.zip")
knitr::opts_chunk$set(echo = TRUE)
options(encoding = 'UTF-8')
install.packages("rvest",repos="https://cran.rstudio.com/bin/windows/Rtools/")
install.packages("tables", repos="https://cran.rstudio.com/bin/windows/contrib/3.6/tables_0.8.8.zip")
install.packages("ggplot2", repos="https://cran.rstudio.com/bin/windows/contrib/3.6/ggplot2_3.2.1.zip")
install.packages("readr", repos="https://cran.rstudio.com/bin/windows/contrib/3.6/readr_1.3.1.zip")
install.packages("expss", repos="https://cran.rstudio.com/bin/windows/contrib/3.6/expss_0.9.1.zip")
install.packages("ggplot2", repos = "https://cran.rstudio.com/bin/windows/contrib/3.6/ggplot2_3.2.1.zip")
#Loading the rvest package
library(rvest)
library(tables) # Presentación de tablas
library(ggplot2)
library(readr)
library(expss)
coches_df <- read_csv("Coches.csv")
head(coches_df)
ggplot(data = coches_df, mapping = aes(x = as.numeric(kms_data), y = as.numeric(precio_data), colour = ano_data)) +
geom_point()
ggplot(coches_df, aes(ano_data)) + geom_bar(fill='darkblue',color="darkred")
ggplot(coches_df, aes(x = puertas_data, y = precio_data)) +
geom_point() + geom_smooth() +
facet_grid(~combustible)
#https://ggplot2.tidyverse.org/reference/ggtheme.html
p1 <- ggplot(coches_df) +
geom_point(aes(x = as.numeric(cc_data), y = as.numeric(precio_data), colour = combustible)) +
labs(title = "Precio VS Caballos",
subtitle = "Datos de coches",
caption = "Datos de Milanuncios",
tag = "Figure 1",
x = "Caballos",
y = "Precio",
colour = "Combustible")
p1 + theme_dark()
#https://cran.r-project.org/web/packages/expss/vignettes/tables-with-labels.html
Salaries = apply_labels(coches_df,
precio_data = "Precio",
combustible = "Combustible",
ano_data = "Anio",
kms_data = "Kilometros",
puertas_data = "Puertas",
cc_data = "Caballos"
)
cro(coches_df$precio_data, coches_df$puertas_data)
cro_cpct(coches_df$ano_data, list(total(), coches_df$combustible, coches_df$puertas_data))
